<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dapr on iAutomate</title>
    <link>https://about-powershell.com/categories/dapr/</link>
    <description>Recent content in Dapr on iAutomate</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 21 Feb 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://about-powershell.com/categories/dapr/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Store Dynamic Data in an Azure Blob Storage using PowerShell with Dapr</title>
      <link>https://about-powershell.com/blog/store-dynamic-data-in-an-azure-blob-storage-using-powershell-with-dapr/</link>
      <pubDate>Mon, 21 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://about-powershell.com/blog/store-dynamic-data-in-an-azure-blob-storage-using-powershell-with-dapr/</guid>
      <description>Introduction The detailed documentation on the Azure Blob Storage binding component is super helpful. With that reference, let me walk you through the steps to store dynamic data to Azure blob storage without writing additional code (using blob API) to interact with the blob. Instead, we use the Dapr binding API.
Binding Component Format apiVersion: dapr.io/v1alpha1 kind: Component metadata: name: bloboutput spec: type: bindings.azure.blobstorage version: v1 metadata: - name: storageAccount value: icontoso - name: storageAccessKey value: {STORAGE_ACCOUNT_KEY} - name: container value: demo - name: decodeBase64 value: true - name: getBlobRetryCount value: 3 Build and run a web server Start-PodeServer { Add-PodeEndpoint -Address * -Port 3000 -Protocol Http Add-PodeRoute -Method Get -Path &amp;#39;/bloboutput&amp;#39; -ScriptBlock { $Bytes = [System.</description>
    </item>
    
  </channel>
</rss>
