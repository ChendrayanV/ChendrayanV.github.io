<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>KQL on Chendrayan Venkatesan</title>
    <link>/tags/kql/</link>
    <description>Recent content in KQL on Chendrayan Venkatesan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 18 Jul 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/kql/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>AZURE DEVOPS SEND POWERSHELL OUTPUT AS DOCX THROUGH EMAIL WITH NO MARKETPLACE EXTENSIONS.MD</title>
      <link>/blog/azure-devops-send-powershell-output-as-docx-through-email-with-no-marketplace-extensions/</link>
      <pubDate>Sat, 18 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/azure-devops-send-powershell-output-as-docx-through-email-with-no-marketplace-extensions/</guid>
      <description>Introduction I was developing an as-built script for Azure infrastructure, which should produce a docx file output with charts and tables (especially for inventory). So, I thought of using Open XML, which I used, a few years ago for SharePoint document library reporting. I searched GitHub and found a great PowerShell module PSWriteWord, and docs are super cool. Yes, this blog post is to show you the simple steps to generate a word document through the Azure DevOps pipeline.</description>
    </item>
    
    <item>
      <title>Retrieve unattached Azure VM disks using PowerShell &amp; Azure Resource Graph</title>
      <link>/blog/retrieve-unattached-azure-vm-disks/</link>
      <pubDate>Fri, 01 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/retrieve-unattached-azure-vm-disks/</guid>
      <description>Introduction As part of the cost saving project task, I developed a PowerShell script to retrieve UNATTACHED disks. I used JOIN operator in this code to get a few tag information from the respective resource group.
 Replace value for the {TAGNAME}.
 $Query = &amp;#34;Resources| where type =~ &amp;#39;Microsoft.Compute/disks&amp;#39;| where properties.diskState =~ &amp;#39;Unattached&amp;#39;| project id, name, subscriptionId, resourceGroup, diskInGB = properties.diskSizeGB, diskState = properties.diskState, timeCreated = properties.</description>
    </item>
    
    <item>
      <title>Azure Resource Graph Query - KQL Joins</title>
      <link>/blog/azure-resource-graph-query-kql-joins/</link>
      <pubDate>Thu, 16 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/azure-resource-graph-query-kql-joins/</guid>
      <description>Introduction A friend asked, How to pull resource groups tags, including resource information? Yes, it is the most common ask, and there are many ways to accomplish it! Time is precious, considering that let us skip the legacy methods like using the Az module, REST API, or SDK&amp;rsquo;s to query the Azure resources in the definitive loops. You are accountable for 200 + subscription and send a report of Azure resources in some schedules.</description>
    </item>
    
  </channel>
</rss>